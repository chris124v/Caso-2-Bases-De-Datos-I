# Archivo de Credenciales de las bases de datos del proyecto 

#Bueno aqui nuevamenete se repite la estructura de los archivos YAML de Kubernetes en namespace, pero en este caso para crear Secrets
# Lo nuevo seria lo siguiente:

# Type - Opaque: Es un tipo de secret muy comun, opaque significa datos genericos como contrasenas y demas
# StringData: Especifica los datos del secret en formato de cadena o texto plano, aqui se definen las claves y valores que se quieren almacenar en el secret
# Importante mencionar que K8 los convierte en base64 cuando los crea, estos stringdata luego se lee en deployments o pods para conectarse a las bases de datos
# namespace: promptsales: Indica que namespace pertenece al secret, el secret solo puede ser usado por el mismo namespace.

# El usuario de sql server es "sa" y la contrasena es "YourStrong!Passw0rd"
# Redis tiene usuario "default" y contrasena "redis123"


apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: promptsales
type: Opaque
stringData:
  username: postgres
  password: postgres123
  database: promptsales
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: promptcontent
type: Opaque
stringData:
  username: mongouser
  password: mongo123
  database: promptcontent
---
apiVersion: v1
kind: Secret
metadata:
  name: sqlserver-secret
  namespace: promptads
type: Opaque
stringData:
  sa_password: YourStrong!Passw0rd
---
apiVersion: v1
kind: Secret
metadata:
  name: sqlserver-secret
  namespace: promptcrm
type: Opaque
stringData:
  sa_password: YourStrong!Passw0rd
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: redis
type: Opaque
stringData:
  password: redis123